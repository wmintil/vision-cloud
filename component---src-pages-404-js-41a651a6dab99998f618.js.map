{"version":3,"file":"component---src-pages-404-js-41a651a6dab99998f618.js","mappings":"yKAkDA,MArCe,IAAmB,IAAlB,SAAEA,GAAU,GACbC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCAEE,uBACEC,MAAO,CACLC,OAAS,SACTC,SAAW,sBACXC,QAAU,uBAGZ,4BAAOL,GACP,0BACEE,MAAO,CACLI,UAAY,iBACZC,SAAW,sB,mGCjCvB,MAOaC,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,mBAErC,UATqB,IACnB,gBAAC,IAAM,KACL,0BAAI,kBACJ,yBAAG,2D,+CCoCP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAED,EAAK,SAAET,GAAU,EAC3C,MAAM,KAAEW,IAASV,EAAAA,EAAAA,gBAAe,YAc1BW,EAAkBF,GAAeC,EAAKE,aAAaH,YACnDI,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBJ,MAExC,OACE,gCACE,6BAAQK,EAAgB,GAAEL,OAAWK,IAAiBL,GACtD,wBAAMM,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASP,IACnC,wBAAMQ,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAL,EAAKE,oBAAY,aAAjB,EAAmBK,SAAW,KACpE,wBAAMH,KAAK,gBAAgBC,QAASP,IACpC,wBAAMM,KAAK,sBAAsBC,QAASJ,IACzCZ,EAGP,C","sources":["webpack://vision-cloud/./src/components/layout.js","webpack://vision-cloud/./src/pages/404.js","webpack://vision-cloud/./src/components/seo.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata?.title || `Title`} /> */}\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          {/* Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a> */}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["children","useStaticQuery","style","margin","maxWidth","padding","marginTop","fontSize","Head","title","description","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}